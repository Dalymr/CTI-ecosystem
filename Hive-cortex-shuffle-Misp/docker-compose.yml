version: "3"
services:
  thehive:
    image: strangebee/thehive:5.2
    depends_on:
      - cassandra
      - elasticsearch
      - minio
      - cortex
    mem_limit: 1500m
    ports:
      - "9000:9000"
    environment:
      - JVM_OPTS="-Xms1024M -Xmx1024M"
    command:
      - --secret
      - "mySecretForTheHive"
      - "--cql-hostnames"
      - "cassandra"
      - "--index-backend"
      - "elasticsearch"
      - "--es-hostnames"
      - "elasticsearch"
      - "--s3-endpoint"
      - "http://minio:9000"
      - "--s3-access-key"
      - "minioadmin"
      - "--s3-secret-key"
      - "minioadmin"
      - "--s3-bucket"
      - "thehive"
      - "--s3-use-path-access-style"
      - "--cortex-hostnames"
      - "cortex"
      - "--cortex-keys"
      # put cortex api key once cortex is bootstraped
      - "<cortex_api_key>"

  cassandra:
    image: 'cassandra:4'
    mem_limit: 1600m
    ports:
      - "9042:9042"
    environment:
      - MAX_HEAP_SIZE=1024M
      - HEAP_NEWSIZE=1024M
      - CASSANDRA_CLUSTER_NAME=TheHive
    volumes:
      - cassandradata:/var/lib/cassandra
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    mem_limit: 1500m
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data

  minio:
    image: quay.io/minio/minio
    mem_limit: 512m
    command: ["minio", "server", "/data", "--console-address", ":9090"]
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9090:9090"
    volumes:
      - "miniodata:/data"

  cortex:
    image: thehiveproject/cortex:3.1.0-0.3RC1
    environment:
      - job_directory=${job_directory}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${job_directory}:${job_directory}
    depends_on:
      - elasticsearch
    ports:
      - "0.0.0.0:9001:9001"



  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped

#READY FOR AUTOMATION ?
  frontend:
    image: ghcr.io/frikky/shuffle-frontend:0.8.64
    container_name: shuffle-frontend
    hostname: shuffle-frontend
    ports:
      - "3001:80"
      - "3443:443"
    environment:
      - BACKEND_HOSTNAME=shuffle-backend
    restart: unless-stopped
    depends_on:
      - backend
  
  backend:
    image: ghcr.io/frikky/shuffle-backend:0.8.64
    container_name: shuffle-backend
    hostname: shuffle-backend
    ports:
      - "5001:5001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./vol/shuffle-apps:/shuffle-apps
      - ./vol/shuffle-files:/shuffle-files
    environment:
      - DATASTORE_EMULATOR_HOST=shuffle-database:8000
      - SHUFFLE_APP_HOTLOAD_FOLDER=./shuffle-apps
      - SHUFFLE_FILE_LOCATION=./shuffle-files
      - ORG_ID=Shuffle
      - SHUFFLE_APP_DOWNLOAD_LOCATION=https://github.com/frikky/shuffle-apps
      - SHUFFLE_DEFAULT_USERNAME=admin
      - SHUFFLE_DEFAULT_PASSWORD=password
      - SHUFFLE_DEFAULT_APIKEY=mysecretkey
      - SHUFFLE_APP_FORCE_UPDATE=false
      - HTTP_PROXY=172.22.200.200:8080
      - HTTPS_PROXY=172.22.200.200:8080
    restart: unless-stopped
    depends_on:
      - database
  
  orborus:
    image: ghcr.io/frikky/shuffle-orborus:0.8.63
    container_name: shuffle-orborus
    hostname: shuffle-orborus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SHUFFLE_APP_SDK_VERSION=0.8.60
      - SHUFFLE_WORKER_VERSION=0.8.63
      - ORG_ID=Shuffle
      - ENVIRONMENT_NAME=Shuffle
      - BASE_URL=http://shuffle-backend:5001
      - DOCKER_API_VERSION=1.40
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - SHUFFLE_PASS_WORKER_PROXY=False
      - SHUFFLE_ORBORUS_EXECUTION_TIMEOUT=600
      - SHUFFLE_BASE_IMAGE_NAME=frikky
      - SHUFFLE_BASE_IMAGE_REGISTRY=ghcr.io
      - SHUFFLE_BASE_IMAGE_TAG_SUFFIX="-0.8.60"
      - CLEANUP=false      
    restart: unless-stopped
  
  database:
    image: frikky/shuffle:database
    container_name: shuffle-database
    hostname: shuffle-database
    ports:
      - "20800:8000"
    restart: unless-stopped
    volumes:
      - ./vol/shuffle-database:/etc/shuffle


  velociraptor:
    container_name: velociraptor
    image: kevinrue/velociraptor
    hostname: velociraptor
    #build:
    #  context: ./
    #  dockerfile: Dockerfile
    volumes:
      - ./velociraptor:/velociraptor/:rw
    environment:
      - VELOX_USER=${VELOX_USER}
      - VELOX_PASSWORD=${VELOX_PASSWORD}
      - VELOX_ROLE=${VELOX_ROLE}
      - VELOX_SERVER_URL=https://velociraptor:8000/
      - VELOX_FRONTEND_HOSTNAME=velociraptor
    ports:
      - "10000:8000"
      - "8001:8001"
      - "8889:8889"
    restart: unless-stopped

volumes:
  miniodata:
  cassandradata:
  elasticsearchdata:

