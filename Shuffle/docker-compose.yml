services:
  shuffle-front:
    image: ghcr.io/shuffle/shuffle-frontend:latest
    container_name: shuffle-front
    hostname: shuffle-front
    ports:
      - "11080:80" #front http
      - "11443:443" #front https
    networks:
      net:
        ipv4_address: 10.0.0.33
    environment:
      - BACKEND_HOSTNAME=shuffle-back
    restart: no
    depends_on:
      - shuffle-back
  shuffle-back:
    image: ghcr.io/shuffle/shuffle-backend:latest
    container_name: shuffle-back
    hostname: shuffle-back
    # Here for debugging:
    ports:
      - "5001:5001"
    networks:
      net:
        ipv4_address: 10.0.0.34
      platform_connections:
          ipv4_address: 10.0.0.55
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SHUFFLE_APP_HOTLOAD_LOCATION}:/shuffle-apps:z
      - ${SHUFFLE_FILE_LOCATION}:/shuffle-files:z
    env_file: .env
    environment:
      #- DOCKER_HOST=tcp://docker-socket-proxy:2375
      - SHUFFLE_APP_HOTLOAD_FOLDER=/shuffle-apps
      - SHUFFLE_FILE_LOCATION=/shuffle-files
    restart: no
  orborus:
    image: ghcr.io/shuffle/shuffle-orborus:latest
    container_name: shuffle-orborus
    hostname: shuffle-orborus
    networks:
      net:
        ipv4_address: 10.0.0.35
      platform_connections:
        ipv4_address: 10.0.0.54   
      internet_gateway:
        ipv4_address: 10.0.0.72
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SHUFFLE_APP_SDK_TIMEOUT=300
      - SHUFFLE_ORBORUS_EXECUTION_CONCURRENCY=7 # The amount of concurrent executions Orborus can handle. 
      #- DOCKER_HOST=tcp://docker-socket-proxy:2375
      - ENVIRONMENT_NAME=${ENVIRONMENT_NAME}
      - BASE_URL=http://${OUTER_HOSTNAME}:5001
      - DOCKER_API_VERSION=1.40
      - SHUFFLE_BASE_IMAGE_NAME=${SHUFFLE_BASE_IMAGE_NAME}
      - SHUFFLE_BASE_IMAGE_REGISTRY=${SHUFFLE_BASE_IMAGE_REGISTRY}
      - SHUFFLE_BASE_IMAGE_TAG_SUFFIX=${SHUFFLE_BASE_IMAGE_TAG_SUFFIX}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - SHUFFLE_PASS_WORKER_PROXY=${SHUFFLE_PASS_WORKER_PROXY}
      - SHUFFLE_PASS_APP_PROXY=${SHUFFLE_PASS_APP_PROXY}
      - SHUFFLE_STATS_DISABLED=true
    restart: no
    security_opt:
      - seccomp:unconfined
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    hostname: shuffle-opensearch
    container_name: shuffle-opensearch
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - bootstrap.memory_lock=true
      - DISABLE_PERFORMANCE_ANALYZER_AGENT_CLI=true
      - cluster.initial_master_nodes=shuffle-opensearch
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.name=shuffle-cluster
      - node.name=shuffle-opensearch
      - node.store.allow_mmap=false
      - discovery.seed_hosts=shuffle-opensearch
    command: bash -c "mkdir -p /usr/share/opensearch/data/nodes && chown -R 1000:1000 /usr/share/opensearch/data"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 
        hard: 65536
    volumes:
      - ${DB_LOCATION}:/usr/share/opensearch/data:z
    ports:
      - 9200:9200
    networks:
      net:
        ipv4_address: 10.0.0.36
    restart: no
networks:
  net:
    driver: bridge
    internal: true
    ipam:
      config:
      - subnet: 10.0.0.32/29
        gateway: 10.0.0.46
  platform_connections:
      external: true
  internet_gateway:
      external: true
    # uncomment to set MTU for swarm mode.
    # MTU should be whatever is your host's preferred MTU is.
    # Refer to this doc to figure out what your host's MTU is:
    # https://shuffler.io/docs/troubleshooting#TLS_timeout_error/Timeout_Errors/EOF_Errors 
    # driver_opts:
    #   com.docker.network.driver.mtu: 1460
